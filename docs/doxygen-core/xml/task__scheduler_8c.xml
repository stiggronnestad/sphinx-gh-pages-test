<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="task__scheduler_8c" kind="file" language="C++">
    <compoundname>task_scheduler.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="task__scheduler_8h" local="yes">task_scheduler.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c</label>
        <link refid="task__scheduler_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>task_scheduler.h</label>
        <link refid="task__scheduler_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>stm32g4xx_hal.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="task__scheduler_8c_1ad96a42679da4509b3f26df710be3c1b5" prot="public" static="yes" mutable="no">
        <type><ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef" kindref="compound">EVERT_TASK_SCHEDULER_HandlerTypeDef</ref></type>
        <definition>EVERT_TASK_SCHEDULER_HandlerTypeDef task_scheduler</definition>
        <argsstring></argsstring>
        <name>task_scheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="5" column="44" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="task__scheduler_8c_1a6b0af4ffa1f99c85545634de91c64e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_Init</definition>
        <argsstring>()</argsstring>
        <name>EVERT_TASK_SCHEDULER_Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="7" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="7" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1ae5ee78360ac3d1bc91352da33fba70c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_Update</definition>
        <argsstring>(const uint32_t delta_ms)</argsstring>
        <name>EVERT_TASK_SCHEDULER_Update</name>
        <param>
          <type>const uint32_t</type>
          <declname>delta_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="22" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="22" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1ae720861fbf5033f7f08c21a180a971c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_PauseTask</definition>
        <argsstring>(const EVERT_TASK_SCHEDULER_TaskTypeDef task)</argsstring>
        <name>EVERT_TASK_SCHEDULER_PauseTask</name>
        <param>
          <type>const <ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7" kindref="member">EVERT_TASK_SCHEDULER_TaskTypeDef</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="39" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a570d9c417c066b4e1cddbe047ef1acea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_ResumeTask</definition>
        <argsstring>(const EVERT_TASK_SCHEDULER_TaskTypeDef task)</argsstring>
        <name>EVERT_TASK_SCHEDULER_ResumeTask</name>
        <param>
          <type>const <ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7" kindref="member">EVERT_TASK_SCHEDULER_TaskTypeDef</ref></type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="44" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1aca83176ec3c5babf166a02e8b3a7904c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_SetTaskSendAnnouncementInterval</definition>
        <argsstring>(const uint32_t interval_ms)</argsstring>
        <name>EVERT_TASK_SCHEDULER_SetTaskSendAnnouncementInterval</name>
        <param>
          <type>const uint32_t</type>
          <declname>interval_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="49" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a0eb585047d3a3595237e9a1bbfc10470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_SetTaskSendDataInterval</definition>
        <argsstring>(const uint32_t interval_ms)</argsstring>
        <name>EVERT_TASK_SCHEDULER_SetTaskSendDataInterval</name>
        <param>
          <type>const uint32_t</type>
          <declname>interval_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="60" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="60" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a3d3119bfb4b551aa2c2a92d4e50709c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_SetTaskSendDeviceStatusInterval</definition>
        <argsstring>(const uint32_t interval_ms)</argsstring>
        <name>EVERT_TASK_SCHEDULER_SetTaskSendDeviceStatusInterval</name>
        <param>
          <type>const uint32_t</type>
          <declname>interval_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="71" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="71" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a84d3ee2903bf4281434c49cbe15ff183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EVERT_TASK_SCHEDULER_SetTaskSendPingInterval</definition>
        <argsstring>(const uint32_t interval_ms)</argsstring>
        <name>EVERT_TASK_SCHEDULER_SetTaskSendPingInterval</name>
        <param>
          <type>const uint32_t</type>
          <declname>interval_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="82" column="6" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="82" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a690334774a756ba32b0c784e29a1f50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__weak void</type>
        <definition>__weak void EVERT_TASK_SCHEDULER_OnTaskSendAnnouncement</definition>
        <argsstring>(void)</argsstring>
        <name>EVERT_TASK_SCHEDULER_OnTaskSendAnnouncement</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="93" column="13" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a81c4b91ef13a28079845bbd6b64c0a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__weak void</type>
        <definition>__weak void EVERT_TASK_SCHEDULER_OnTaskSendData</definition>
        <argsstring>(void)</argsstring>
        <name>EVERT_TASK_SCHEDULER_OnTaskSendData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="94" column="13" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a0101cf6784bea128cea8cae8d8efa91c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__weak void</type>
        <definition>__weak void EVERT_TASK_SCHEDULER_OnTaskSendDeviceStatus</definition>
        <argsstring>(void)</argsstring>
        <name>EVERT_TASK_SCHEDULER_OnTaskSendDeviceStatus</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="95" column="13" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="task__scheduler_8c_1a44c69e91dc535c0494ce3218a6f82ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__weak void</type>
        <definition>__weak void EVERT_TASK_SCHEDULER_OnTaskSendPing</definition>
        <argsstring>(void)</argsstring>
        <name>EVERT_TASK_SCHEDULER_OnTaskSendPing</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" line="96" column="13" bodyfile="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c" bodystart="96" bodyend="96"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="task__scheduler_8h" kindref="compound">task_scheduler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef" kindref="compound">EVERT_TASK_SCHEDULER_HandlerTypeDef</ref><sp/>task_scheduler;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="task__scheduler_8c_1a6b0af4ffa1f99c85545634de91c64e85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a6b0af4ffa1f99c85545634de91c64e85" kindref="member">EVERT_TASK_SCHEDULER_Init</ref>()</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af26eb94bbc75d5a039f9a571aa4f12a8" kindref="member">EVERT_TASK_SEND_ANNOUNCEMENT</ref>]<sp/>=<sp/><ref refid="task__scheduler_8c_1a690334774a756ba32b0c784e29a1f50c" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendAnnouncement</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af1d664451f04900546e1a1e67cb73f17" kindref="member">EVERT_TASK_SEND_DATA</ref>]<sp/>=<sp/><ref refid="task__scheduler_8c_1a81c4b91ef13a28079845bbd6b64c0a9e" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendData</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7abae80667f866cfc7652404f7071d7aa9" kindref="member">EVERT_TASK_SEND_DEVICE_STATUS</ref>]<sp/>=<sp/><ref refid="task__scheduler_8c_1a0101cf6784bea128cea8cae8d8efa91c" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendDeviceStatus</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7a4fc179186d9461a31d6c519b98703c65" kindref="member">EVERT_TASK_SEND_PING</ref>]<sp/>=<sp/><ref refid="task__scheduler_8c_1a44c69e91dc535c0494ce3218a6f82ddd" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendPing</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac4c3ca76cf6fd00358265e0d8c6d128b" kindref="member">TaskIntervalMs</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="task__scheduler_8c_1ae5ee78360ac3d1bc91352da33fba70c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1ae5ee78360ac3d1bc91352da33fba70c8" kindref="member">EVERT_TASK_SCHEDULER_Update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>delta_ms)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[i])</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[i]<sp/>+=<sp/>delta_ms;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[i]<sp/>&gt;=<sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac4c3ca76cf6fd00358265e0d8c6d128b" kindref="member">TaskIntervalMs</ref>[i])</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[i]();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="task__scheduler_8c_1ae720861fbf5033f7f08c21a180a971c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1ae720861fbf5033f7f08c21a180a971c7" kindref="member">EVERT_TASK_SCHEDULER_PauseTask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7" kindref="member">EVERT_TASK_SCHEDULER_TaskTypeDef</ref><sp/>task)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[task]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="task__scheduler_8c_1a570d9c417c066b4e1cddbe047ef1acea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a570d9c417c066b4e1cddbe047ef1acea" kindref="member">EVERT_TASK_SCHEDULER_ResumeTask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7" kindref="member">EVERT_TASK_SCHEDULER_TaskTypeDef</ref><sp/>task)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[task]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="task__scheduler_8c_1aca83176ec3c5babf166a02e8b3a7904c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1aca83176ec3c5babf166a02e8b3a7904c" kindref="member">EVERT_TASK_SCHEDULER_SetTaskSendAnnouncementInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>interval_ms)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac4c3ca76cf6fd00358265e0d8c6d128b" kindref="member">TaskIntervalMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af26eb94bbc75d5a039f9a571aa4f12a8" kindref="member">EVERT_TASK_SEND_ANNOUNCEMENT</ref>]<sp/>=<sp/>interval_ms;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af26eb94bbc75d5a039f9a571aa4f12a8" kindref="member">EVERT_TASK_SEND_ANNOUNCEMENT</ref>]<sp/>&amp;&amp;<sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af26eb94bbc75d5a039f9a571aa4f12a8" kindref="member">EVERT_TASK_SEND_ANNOUNCEMENT</ref>]<sp/>&gt;=<sp/>interval_ms)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af26eb94bbc75d5a039f9a571aa4f12a8" kindref="member">EVERT_TASK_SEND_ANNOUNCEMENT</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af26eb94bbc75d5a039f9a571aa4f12a8" kindref="member">EVERT_TASK_SEND_ANNOUNCEMENT</ref>]();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="task__scheduler_8c_1a0eb585047d3a3595237e9a1bbfc10470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a0eb585047d3a3595237e9a1bbfc10470" kindref="member">EVERT_TASK_SCHEDULER_SetTaskSendDataInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>interval_ms)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac4c3ca76cf6fd00358265e0d8c6d128b" kindref="member">TaskIntervalMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af1d664451f04900546e1a1e67cb73f17" kindref="member">EVERT_TASK_SEND_DATA</ref>]<sp/>=<sp/>interval_ms;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af1d664451f04900546e1a1e67cb73f17" kindref="member">EVERT_TASK_SEND_DATA</ref>]<sp/>&amp;&amp;<sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af1d664451f04900546e1a1e67cb73f17" kindref="member">EVERT_TASK_SEND_DATA</ref>]<sp/>&gt;=<sp/>interval_ms)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af1d664451f04900546e1a1e67cb73f17" kindref="member">EVERT_TASK_SEND_DATA</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7af1d664451f04900546e1a1e67cb73f17" kindref="member">EVERT_TASK_SEND_DATA</ref>]();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="task__scheduler_8c_1a3d3119bfb4b551aa2c2a92d4e50709c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a3d3119bfb4b551aa2c2a92d4e50709c2" kindref="member">EVERT_TASK_SCHEDULER_SetTaskSendDeviceStatusInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>interval_ms)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac4c3ca76cf6fd00358265e0d8c6d128b" kindref="member">TaskIntervalMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7abae80667f866cfc7652404f7071d7aa9" kindref="member">EVERT_TASK_SEND_DEVICE_STATUS</ref>]<sp/>=<sp/>interval_ms;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7abae80667f866cfc7652404f7071d7aa9" kindref="member">EVERT_TASK_SEND_DEVICE_STATUS</ref>]<sp/>&amp;&amp;<sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7abae80667f866cfc7652404f7071d7aa9" kindref="member">EVERT_TASK_SEND_DEVICE_STATUS</ref>]<sp/>&gt;=<sp/>interval_ms)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7abae80667f866cfc7652404f7071d7aa9" kindref="member">EVERT_TASK_SEND_DEVICE_STATUS</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7abae80667f866cfc7652404f7071d7aa9" kindref="member">EVERT_TASK_SEND_DEVICE_STATUS</ref>]();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="task__scheduler_8c_1a84d3ee2903bf4281434c49cbe15ff183" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a84d3ee2903bf4281434c49cbe15ff183" kindref="member">EVERT_TASK_SCHEDULER_SetTaskSendPingInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>interval_ms)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac4c3ca76cf6fd00358265e0d8c6d128b" kindref="member">TaskIntervalMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7a4fc179186d9461a31d6c519b98703c65" kindref="member">EVERT_TASK_SEND_PING</ref>]<sp/>=<sp/>interval_ms;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ac78d0ad55c36226cf8035e828293232f" kindref="member">TaskEnabled</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7a4fc179186d9461a31d6c519b98703c65" kindref="member">EVERT_TASK_SEND_PING</ref>]<sp/>&amp;&amp;<sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7a4fc179186d9461a31d6c519b98703c65" kindref="member">EVERT_TASK_SEND_PING</ref>]<sp/>&gt;=<sp/>interval_ms)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1ab209b7e090ba4279f99efa31507b91f8" kindref="member">TaskCounterMs</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7a4fc179186d9461a31d6c519b98703c65" kindref="member">EVERT_TASK_SEND_PING</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_scheduler.<ref refid="structEVERT__TASK__SCHEDULER__HandlerTypeDef_1acb19ac514a06f26e144aca2e1966915c" kindref="member">OnTaskCallback</ref>[<ref refid="task__scheduler_8h_1a46a07a16a1f1513536ffc8bf466dc9e7a4fc179186d9461a31d6c519b98703c65" kindref="member">EVERT_TASK_SEND_PING</ref>]();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="task__scheduler_8c_1a690334774a756ba32b0c784e29a1f50c" refkind="member"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a690334774a756ba32b0c784e29a1f50c" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendAnnouncement</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="94" refid="task__scheduler_8c_1a81c4b91ef13a28079845bbd6b64c0a9e" refkind="member"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a81c4b91ef13a28079845bbd6b64c0a9e" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendData</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="95" refid="task__scheduler_8c_1a0101cf6784bea128cea8cae8d8efa91c" refkind="member"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a0101cf6784bea128cea8cae8d8efa91c" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendDeviceStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="96" refid="task__scheduler_8c_1a44c69e91dc535c0494ce3218a6f82ddd" refkind="member"><highlight class="normal">__weak<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="task__scheduler_8c_1a44c69e91dc535c0494ce3218a6f82ddd" kindref="member">EVERT_TASK_SCHEDULER_OnTaskSendPing</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
    </programlisting>
    <location file="/mnt/c/dev/evert-firmware-pmu/libs/core/src/task_scheduler.c"/>
  </compounddef>
</doxygen>
